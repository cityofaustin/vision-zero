services:
  graphql-engine:
    image: hasura/graphql-engine:v2.45.1
    volumes:
      - ./viewer/graphql-engine-metadata:/metadata
    ports:
      - 8084:8080
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://visionzero:visionzero@postgis:5432/atd_vz_data
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: /srv/console-assets
      HASURA_GRAPHQL_NO_OF_RETRIES: 30
    depends_on:
      - postgis

  vze:
    tty: true
    container_name: visionzero-vze
    command: npm start
    ports:
      - 3002:3000
    hostname: vze
    build: editor
    volumes:
      - ./editor:/root/editor
  vzv:
    tty: true
    container_name: visionzero-vzv
    command: npm start
    ports:
      - 3001:3000
    hostname: vzv
    build: viewer
    volumes:
      - ./viewer:/root/viewer

  postgis:
    build: database
    env_file:
      - .env
    volumes:
      - ./database/snapshots:/snapshots
    ports:
      - 5431:5432
    command: postgres 
      -c 'maintenance_work_mem=1GB'
      -c 'max_wal_size=4GB'
      -c 'shared_buffers=1GB'
      -c 'work_mem=32MB'

  cr3-user-api:
    build: api
    # image: atddocker/vz-user-cr3-api
    env_file:
      - api/.env
    ports:
      - 8085:5000
    volumes:
      - ./api:/usr/src/app
    command: flask run --host=0.0.0.0 --port=5000 --debug
