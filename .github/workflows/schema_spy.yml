name: "Build & Publish DB Documentation"

on:
  push:
    branches:
      #- main
      #- production
      - add-schema-spy-github-action

    paths:
      - "database/**"
      - ".github/workflows/schema_spy.yml"

jobs:
  build:
    name: "Build SchemaSpy Documentation"
    runs-on: ubuntu-24.04
    # Setup Python
    steps:

      # Checkout our code
      - name: "Checkout Code"
        uses: actions/checkout@v4

      # Get python installed
      - uses: actions/setup-python@v5
        name: "Install setup-python@v5"
        with:
          python-version: "3.10"
          # architecture: "x64"

      # Install python libraries
      - name: "Install Python Libraries"
        run: |
          sudo apt-get install -y python3-setuptools
          pip3 install awscli boto3 virtualenv requests shtab python-dotenv --break-system-packages
      
      # Install the graphql-engine CLI
      - name: "Install the graphql-engine CLI"
        run: |
          curl -L https://github.com/hasura/graphql-engine/raw/stable/cli/get.sh | /bin/bash

      # - name: AWS CLI Setup
      #   uses: aws-actions/configure-aws-credentials@v1
      #   env:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: us-east-1

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # Run the shell commands using the AWS environment variables
      - name: "Build & Publish Database Documentation"
        env:
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          export BRANCH_NAME=${GITHUB_REF##*/};
          echo "SHA: ${GITHUB_SHA}";
          echo "ACTION/BRANCH_NAME: ${BRANCH_NAME}";
          echo "GR: ${GITHUB_REF}";
          echo "PWD: $(pwd)";

          echo "POSTGRES_PASSWORD=visionzero" > .env;
          echo "POSTGRES_USER=visionzero" >> .env;
          echo "POSTGRES_DB=atd_vz_data" >> .env;
          echo "POSTGRES_HOST_AUTH_METHOD=trust" >> .env;

          docker compose -f docker-compose-github-schema-spy-action.yml up -d postgis;
          sleep 10;
          docker compose -f docker-compose-github-schema-spy-action.yml up -d graphql-engine;
          sleep 10;
          cd database;
          hasura --skip-update-check --database-name=default migrate apply;
          cd ..;
          sleep 10;
          chmod a+rwX database/schemaspy_docs;
          docker compose -f docker-compose-github-schema-spy-action.yml run schemaspy --debug;

      - uses: jakejarvis/s3-sync-action@master
        with:
          args: --delete
        env:
          AWS_S3_BUCKET: db-docs.austinmobility.io
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR: 'database/schemaspy_docs'
          DEST_DIR: 'vision-zero-staging'



      - name: "Build dbdocs.io documentation"
        env:
          DBDOCS_TOKEN: ${{ secrets.DBDOCS_TOKEN }}

        run: |
          export BRANCH_NAME=${GITHUB_REF##*/};
          echo "SHA: ${GITHUB_SHA}";
          echo "ACTION/BRANCH_NAME: ${BRANCH_NAME}";
          echo "GR: ${GITHUB_REF}";
          echo "PWD: $(pwd)";
          echo "DB Docs Token: ${DBDOCS_TOKEN}";

          npm install dbdocs -g;
          dbdocs db2dbml postgres postgres://visionzero:visionzero@localhost:5432/atd_vz_data -o database.dbml
          dbdocs build ./database.dbml
